// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAnimeList.Persistence.Contexto;

namespace MyAnimeList.Persistence.Migrations
{
    [DbContext(typeof(MyAnimeListContext))]
    [Migration("20220621171233_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MyAnimeList.Domain.Anime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<int>("Episodios")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagemURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("MyAnimeList.Domain.AnimeEstudio", b =>
                {
                    b.Property<int>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstudioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimeId", "EstudioId");

                    b.HasIndex("EstudioId");

                    b.ToTable("AnimeEstudio");
                });

            modelBuilder.Entity("MyAnimeList.Domain.AnimeGenero", b =>
                {
                    b.Property<int>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GeneroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimeId", "GeneroId");

                    b.HasIndex("GeneroId");

                    b.ToTable("AnimeGenero");
                });

            modelBuilder.Entity("MyAnimeList.Domain.Demographic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Demographics");
                });

            modelBuilder.Entity("MyAnimeList.Domain.Estudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estudios");
                });

            modelBuilder.Entity("MyAnimeList.Domain.Fonte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fontes");
                });

            modelBuilder.Entity("MyAnimeList.Domain.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("MyAnimeList.Domain.AnimeEstudio", b =>
                {
                    b.HasOne("MyAnimeList.Domain.Anime", "Anime")
                        .WithMany("Estudios")
                        .HasForeignKey("AnimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyAnimeList.Domain.Estudio", "Estudio")
                        .WithMany("AnimesEstudios")
                        .HasForeignKey("EstudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anime");

                    b.Navigation("Estudio");
                });

            modelBuilder.Entity("MyAnimeList.Domain.AnimeGenero", b =>
                {
                    b.HasOne("MyAnimeList.Domain.Anime", "Anime")
                        .WithMany("Generos")
                        .HasForeignKey("AnimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyAnimeList.Domain.Genero", "Genero")
                        .WithMany("AnimesGeneros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anime");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("MyAnimeList.Domain.Anime", b =>
                {
                    b.Navigation("Estudios");

                    b.Navigation("Generos");
                });

            modelBuilder.Entity("MyAnimeList.Domain.Estudio", b =>
                {
                    b.Navigation("AnimesEstudios");
                });

            modelBuilder.Entity("MyAnimeList.Domain.Genero", b =>
                {
                    b.Navigation("AnimesGeneros");
                });
#pragma warning restore 612, 618
        }
    }
}
